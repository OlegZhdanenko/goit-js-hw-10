{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst input = document.querySelector(\"#datetime-picker\");\nconst button = document.querySelector(\"button\");\nbutton.disabled = true;\nlet userSelectedDate;\n\n\nconst options = {\nenableTime: true,\ntime_24hr: true,\ndefaultDate: new Date(),\nminuteIncrement: 1,\n    onClose(selectedDates) {\n        button.disabled = true;\n        if (selectedDates[0] < new Date()) {\n        iziToast.warning({\n                message: \"Please choose a date in the future\"\n            });\n        } else if(selectedDates[0] >=  new Date()){\n            button.disabled = false;\n        userSelectedDate=selectedDates[0]\n    }\n},\n};\n\nconst datePicker =  flatpickr(input, options);\ndatePicker.selectedDates[0]\nconst day = document.querySelector(\".value[data-days]\");\nconst minute = document.querySelector(\".value[data-minutes]\");\nconst hour = document.querySelector(\".value[data-hours]\");\nconst second = document.querySelector(\".value[data-seconds]\");\n\n\nbutton.addEventListener(\"click\", onclick);\nfunction onclick() {\n    \n    setInterval(() => {\n        let currentTime = new Date().getTime()\n        const userTime = userSelectedDate.getTime();\n        let difTime = userTime - currentTime;\n        const result = convertMs(difTime);\n        \n        day.textContent = `${result.days}`\n        hour.textContent = `${result.hours}`\n        minute.textContent = `${result.minutes}`\n        second.textContent=`${result.seconds}`\n    },1000)\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2,\"0\");;\n};\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = addLeadingZero(Math.floor(ms / day));\n    const hours = addLeadingZero(Math.floor((ms % day) / hour));\n    const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n    const seconds = addLeadingZero(Math.floor((((ms % day) % hour) % minute) / second));\n\n    return { days, hours, minutes, seconds };\n};\n// sadfdsfsd"],"names":["input","button","userSelectedDate","options","selectedDates","iziToast","datePicker","flatpickr","day","minute","hour","second","onclick","currentTime","difTime","result","convertMs","addLeadingZero","value","ms","days","hours","minutes","seconds"],"mappings":"2GAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,SAAW,GAClB,IAAIC,EAGJ,MAAMC,EAAU,CAChB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACb,QAAQC,EAAe,CACnBH,EAAO,SAAW,GACdG,EAAc,GAAK,IAAI,KAC3BC,EAAS,QAAQ,CACT,QAAS,oCACzB,CAAa,EACKD,EAAc,IAAO,IAAI,OAC/BH,EAAO,SAAW,GACtBC,EAAiBE,EAAc,GAEvC,CACA,EAEME,EAAcC,EAAUP,EAAOG,CAAO,EAC5CG,EAAW,cAAc,GACzB,MAAME,EAAM,SAAS,cAAc,mBAAmB,EAChDC,EAAS,SAAS,cAAc,sBAAsB,EACtDC,EAAO,SAAS,cAAc,oBAAoB,EAClDC,EAAS,SAAS,cAAc,sBAAsB,EAG5DV,EAAO,iBAAiB,QAASW,CAAO,EACxC,SAASA,GAAU,CAEf,YAAY,IAAM,CACd,IAAIC,EAAc,IAAI,KAAM,EAAC,QAAS,EAElCC,EADaZ,EAAiB,UACTW,EACzB,MAAME,EAASC,EAAUF,CAAO,EAEhCN,EAAI,YAAc,GAAGO,EAAO,OAC5BL,EAAK,YAAc,GAAGK,EAAO,QAC7BN,EAAO,YAAc,GAAGM,EAAO,UAC/BJ,EAAO,YAAY,GAAGI,EAAO,SAChC,EAAC,GAAI,CACV,CAEA,SAASE,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAE,GAAG,CACvC,CAEA,SAASF,EAAUG,EAAI,CAMnB,MAAMC,EAAOH,EAAe,KAAK,MAAME,EAAK,KAAG,CAAC,EAC1CE,EAAQJ,EAAe,KAAK,MAAOE,EAAK,MAAO,IAAI,CAAC,EACpDG,EAAUL,EAAe,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,CAAC,EACjEI,EAAUN,EAAe,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,CAAC,EAElF,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}